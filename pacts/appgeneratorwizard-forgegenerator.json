{
  "consumer": {
    "name": "AppGeneratorWizard"
  },
  "provider": {
    "name": "ForgeGenerator"
  },
  "interactions": [
    {
      "description": "step1.3",
      "providerState": "step1.3.next",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/next",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            }
          ],
          "stepIndex": 1
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "metadata": {
            "deprecated": false,
            "category": "Uncategorized",
            "name": "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
            "description": "No Description"
          },
          "state": {
            "valid": false,
            "canExecute": false,
            "wizard": true,
            "canMoveToNextStep": false,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep"
            ]
          },
          "inputs": [
            {
              "name": "gitRepositoryPattern",
              "shortName": " ",
              "valueType": "io.fabric8.forge.generator.git.GitRepositoryDTO",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Repository name pattern",
              "description": "The regex pattern to match repository names",
              "valueChoices": [
                {
                  "id": "3musket33rs.github.com",
                  "description": "Web Site",
                  "name": "3musket33rs.github.com",
                  "valid": true
                },
                {
                  "id": "corinnekrych",
                  "description": "My personal github account",
                  "htmlUrl": "https://github.com/corinnekrych",
                  "name": "corinnekrych",
                  "valid": true
                }
              ],
              "class": "UISelectMany",
              "value": [

              ]
            }
          ]
        }
      }
    },
    {
      "description": "step2.1",
      "providerState": "step2.1.validate",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/validate",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            },
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            }
          ],
          "stepIndex": 1
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "state": {
            "valid": true,
            "canExecute": true,
            "wizard": true,
            "canMoveToNextStep": true,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
              "Obsidian: Configure Pipeline",
              "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"
            ]
          },
          "messages": [

          ],
          "inputs": [
            {
              "name": "gitRepositoryPattern",
              "shortName": " ",
              "valueType": "io.fabric8.forge.generator.git.GitRepositoryDTO",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Repository name pattern",
              "description": "The regex pattern to match repository names",
              "valueChoices": [
                {
                  "id": "sprint135",
                  "description": "created at Tue Aug 08 07:52:49 UTC 2017",
                  "name": "sprint135",
                  "valid": true
                },
                {
                  "id": "sprint135bis",
                  "description": "created at Tue Aug 08 08:16:47 UTC 2017",
                  "name": "sprint135bis",
                  "valid": true
                }
              ],
              "class": "UISelectMany",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            }
          ]
        }
      }
    },
    {
      "description": "step2.2",
      "providerState": "step2.2.next",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/next",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            },
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            }
          ],
          "stepIndex": 2
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "metadata": {
            "deprecated": false,
            "category": "Obsidian",
            "name": "Obsidian: Configure Pipeline",
            "description": "Configure the Pipeline for the new project"
          },
          "state": {
            "valid": true,
            "canExecute": true,
            "wizard": true,
            "canMoveToNextStep": true,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
              "Obsidian: Configure Pipeline",
              "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"
            ]
          },
          "inputs": [
            {
              "name": "pipeline",
              "shortName": " ",
              "valueType": "io.fabric8.forge.generator.pipeline.PipelineDTO",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Pipeline",
              "description": "The Jenkinsfile used to define the Continous Delivery pipeline",
              "valueChoices": [
                {
                  "id": "Release",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n",
                  "environments": [
                    "Test"
                  ],
                  "label": "Release",
                  "stages": [
                    "Build Release",
                    "Integration Test"
                  ],
                  "value": "maven/Release/Jenkinsfile"
                },
                {
                  "id": "Release and Stage",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n* stages the new version into the **Stage** environment\n",
                  "environments": [
                    "Test",
                    "Stage"
                  ],
                  "label": "Release and Stage",
                  "stages": [
                    "Build Release",
                    "Integration Test",
                    "Rollout to Stage"
                  ],
                  "value": "maven/ReleaseAndStage/Jenkinsfile"
                },
                {
                  "id": "Release, Stage, Approve and Promote",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n* stages the new version into the **Stage** environment\n* waits for **Approval** to promote \n* promotes to the **Run** environment\n",
                  "environments": [
                    "Test",
                    "Stage",
                    "Run"
                  ],
                  "label": "Release, Stage, Approve and Promote",
                  "stages": [
                    "Build Release",
                    "Integration Test",
                    "Rollout to Stage",
                    "Approve",
                    "Rollout to Run"
                  ],
                  "value": "maven/ReleaseStageApproveAndPromote/Jenkinsfile"
                }
              ],
              "class": "UISelectOne",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Organisation",
              "description": "The organisation",
              "valueChoices": [
                {
                  "id": "ckrych"
                },
                {
                  "id": "ckrych-che"
                },
                {
                  "id": "ckrych-jenkins"
                },
                {
                  "id": "ckrych-run"
                },
                {
                  "id": "ckrych-stage"
                }
              ],
              "class": "UISelectOne",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Space",
              "description": "The space for the new app",
              "class": "UIInput"
            }
          ]
        }
      }
    },
    {
      "description": "step3.1",
      "providerState": "step3.1.validate",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/validate",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            },
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            },
            {
              "name": "pipeline",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "value": "testwizard"
            }
          ],
          "stepIndex": 2
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "state": {
            "valid": true,
            "canExecute": true,
            "wizard": true,
            "canMoveToNextStep": true,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
              "Obsidian: Configure Pipeline",
              "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"
            ]
          },
          "messages": [

          ],
          "inputs": [
            {
              "name": "pipeline",
              "shortName": " ",
              "valueType": "io.fabric8.forge.generator.pipeline.PipelineDTO",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Pipeline",
              "description": "The Jenkinsfile used to define the Continous Delivery pipeline",
              "valueChoices": [
                {
                  "id": "Release",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n",
                  "environments": [
                    "Test"
                  ],
                  "label": "Release",
                  "stages": [
                    "Build Release",
                    "Integration Test"
                  ],
                  "value": "maven/Release/Jenkinsfile"
                },
                {
                  "id": "Release and Stage",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n* stages the new version into the **Stage** environment\n",
                  "environments": [
                    "Test",
                    "Stage"
                  ],
                  "label": "Release and Stage",
                  "stages": [
                    "Build Release",
                    "Integration Test",
                    "Rollout to Stage"
                  ],
                  "value": "maven/ReleaseAndStage/Jenkinsfile"
                },
                {
                  "id": "Release, Stage, Approve and Promote",
                  "builder": "maven",
                  "descriptionMarkdown": "Maven based pipeline which:\n\n* creates a new version then builds and deploys the project into the maven repository\n* runs an integration test in the **Test** environment\n* stages the new version into the **Stage** environment\n* waits for **Approval** to promote \n* promotes to the **Run** environment\n",
                  "environments": [
                    "Test",
                    "Stage",
                    "Run"
                  ],
                  "label": "Release, Stage, Approve and Promote",
                  "stages": [
                    "Build Release",
                    "Integration Test",
                    "Rollout to Stage",
                    "Approve",
                    "Rollout to Run"
                  ],
                  "value": "maven/ReleaseStageApproveAndPromote/Jenkinsfile"
                }
              ],
              "class": "UISelectOne",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Organisation",
              "description": "The organisation",
              "valueChoices": [
                {
                  "id": "ckrych"
                },
                {
                  "id": "ckrych-che"
                },
                {
                  "id": "ckrych-jenkins"
                },
                {
                  "id": "ckrych-run"
                },
                {
                  "id": "ckrych-stage"
                }
              ],
              "class": "UISelectOne",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Space",
              "description": "The space for the new app",
              "class": "UIInput",
              "value": "testwizard"
            }
          ]
        }
      }
    },
    {
      "description": "step3.2",
      "providerState": "step3.2.next",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/next",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "pipeline",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "value": "testwizard"
            },
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            },
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            }
          ],
          "stepIndex": 3
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "metadata": {
            "deprecated": false,
            "category": "Uncategorized",
            "name": "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep",
            "description": "No Description"
          },
          "state": {
            "valid": true,
            "canExecute": true,
            "wizard": true,
            "canMoveToNextStep": false,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
              "Obsidian: Configure Pipeline",
              "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"
            ]
          },
          "inputs": [
            {
              "name": "jenkinsSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Jenkins Space",
              "description": "The space running Jenkins",
              "valueChoices": [
                {
                  "id": "ckrych"
                },
                {
                  "id": "ckrych-che"
                },
                {
                  "id": "ckrych-jenkins"
                },
                {
                  "id": "ckrych-run"
                },
                {
                  "id": "ckrych-stage"
                }
              ],
              "class": "UISelectOne",
              "value": "ckrych-jenkins"
            },
            {
              "name": "triggerBuild",
              "shortName": " ",
              "valueType": "java.lang.Boolean",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Trigger build",
              "description": "Should a build be triggered immediately after import?",
              "class": "UIInput",
              "value": true
            },
            {
              "name": "addCIWebHooks",
              "shortName": " ",
              "valueType": "java.lang.Boolean",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Add CI?",
              "description": "Should we add a Continuous Integration webhooks for Pull Requests?",
              "class": "UIInput",
              "value": true
            }
          ]
        }
      }
    },
    {
      "description": "step4.1",
      "providerState": "step4.1.validate",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/validate",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            },
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            },
            {
              "name": "pipeline",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "value": "testwizard"
            },
            {
              "name": "jenkinsSpace",
              "value": "ckrych-jenkins"
            },
            {
              "name": "triggerBuild",
              "value": true
            },
            {
              "name": "addCIWebHooks",
              "value": true
            }
          ],
          "stepIndex": 3
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "state": {
            "valid": true,
            "canExecute": true,
            "wizard": true,
            "canMoveToNextStep": false,
            "canMoveToPreviousStep": true,
            "steps": [
              "io.fabric8.forge.generator.github.GithubImportPickOrganisationStep",
              "io.fabric8.forge.generator.github.GithubImportPickRepositoriesStep",
              "Obsidian: Configure Pipeline",
              "io.fabric8.forge.generator.kubernetes.CreateBuildConfigStep"
            ]
          },
          "messages": [

          ],
          "inputs": [
            {
              "name": "jenkinsSpace",
              "shortName": " ",
              "valueType": "java.lang.String",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": true,
              "deprecated": false,
              "label": "Jenkins Space",
              "description": "The space running Jenkins",
              "valueChoices": [
                {
                  "id": "ckrych"
                },
                {
                  "id": "ckrych-che"
                },
                {
                  "id": "ckrych-jenkins"
                },
                {
                  "id": "ckrych-run"
                },
                {
                  "id": "ckrych-stage"
                }
              ],
              "class": "UISelectOne",
              "value": "ckrych-jenkins"
            },
            {
              "name": "triggerBuild",
              "shortName": " ",
              "valueType": "java.lang.Boolean",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Trigger build",
              "description": "Should a build be triggered immediately after import?",
              "class": "UIInput",
              "value": true
            },
            {
              "name": "addCIWebHooks",
              "shortName": " ",
              "valueType": "java.lang.Boolean",
              "inputType": "org.jboss.forge.inputType.DEFAULT",
              "enabled": true,
              "required": false,
              "deprecated": false,
              "label": "Add CI?",
              "description": "Should we add a Continuous Integration webhooks for Pull Requests?",
              "class": "UIInput",
              "value": true
            }
          ]
        }
      }
    },
    {
      "description": "step4.2",
      "providerState": "step4.2.next",
      "request": {
        "method": "POST",
        "path": "/commands/fabric8-import-git/next",
        "body": {
          "state": {

          },
          "inputs": [
            {
              "name": "jenkinsSpace",
              "value": "ckrych-jenkins"
            },
            {
              "name": "triggerBuild",
              "value": true
            },
            {
              "name": "addCIWebHooks",
              "value": true
            },
            {
              "name": "gitOrganisation",
              "value": "corinnekrych"
            },
            {
              "name": "gitRepositoryPattern",
              "value": [
                "sprint135",
                "sprint135bis"
              ]
            },
            {
              "name": "pipeline",
              "value": "Release, Stage, Approve and Promote"
            },
            {
              "name": "kubernetesSpace",
              "value": "ckrych"
            },
            {
              "name": "labelSpace",
              "value": "testwizard"
            }
          ],
          "stepIndex": 4
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          null,
          null,
          null,
          null,
          {
            "warnings": [

            ]
          },
          null,
          {
            "namespace": "ckrych",
            "buildConfigName": "sprint135bis",
            "gitUrl": "https://github.com/corinnekrych/sprint135.git",
            "cheStackId": "vert.x",
            "organisationJenkinsJobUrl": null,
            "gitRepositoryNames": [
              "sprint135",
              "sprint135bis"
            ],
            "gitRepositories": [
              {
                "url": "https://github.com/corinnekrych/sprint135.git",
                "repoName": "sprint135"
              },
              {
                "url": "https://github.com/corinnekrych/sprint135bis.git",
                "repoName": "sprint135bis"
              }
            ],
            "gitOwnerName": "corinnekrych",
            "warnings": [

            ]
          }
        ]
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}