import { ElementFinder } from 'protractor';
import * as ui from './../../ui';
import { WorkItemList } from './workitem-list';
export declare class SidePanel extends ui.BaseElement {
    showHideSidePanelButton: ui.Button;
    scenarioButton: ui.Clickable;
    experienceButton: ui.Clickable;
    requirementsButton: ui.Clickable;
    workItemsGroupAgile: ui.Clickable;
    iterationDiv: ui.BaseElement;
    createIterationButton: ui.Button;
    iterationList: ui.BaseElementArray;
    iterationKebab: ui.Button;
    editIteration: ui.Clickable;
    iterationHeader: ui.BaseElementArray;
    customQuery: ui.BaseElement;
    customQueryList: ui.BaseElementArray;
    deleteCustomQuery: ui.Clickable;
    infotipIconExperience: ui.Clickable;
    infotipIconRequirement: ui.Clickable;
    infotipPopover: ui.BaseElementArray;
    workItemList: WorkItemList;
    constructor(ele: ElementFinder, name?: string);
    ready(): Promise<void>;
    clickWorkItemGroup(): Promise<void>;
    createNewIteration(): Promise<void>;
    getIterationList(): Promise<String[]>;
    selectIterationKebab(iterationName: string): Promise<void>;
    openIterationDialogue(): Promise<void>;
    getIterationDate(): Promise<String>;
    clickExpander(iterationName: string): Promise<void>;
    getMyFiltersList(): Promise<String[]>;
    selectcustomFilterKebab(queryName: string): Promise<void>;
    clickIteration(iterationName: string): Promise<void>;
}
